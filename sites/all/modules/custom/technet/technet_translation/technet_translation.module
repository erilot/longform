<?php

/**
 * Implements hook_action_info().
 */
function technet_translation_action_info() {
  return array(
    'technet_translation_generate_job_action' => array(
      'type' => 'entity',
      'label' => t('Technet shortcut to add jobs'),
      'configurable' => FALSE,
      'pass rows' => TRUE,
    )
  );
}

/**
 * Implements hook_action().
 *
 * Add this action to the Node Source Overview view.
 *
 * Build an array of selected nodes from views_bulk_operations.
 * When the last one is read, call the routine to add tmgmt jobs.
 *
 */
function technet_translation_generate_job_action(&$entity, $context = array()) {
  global $selected_counter, $selected_nodes;
  $selected_counter++;
  $selected_total = $context['progress']['total'];

  // build an array of objects for each node that was selected
  $info = entity_get_info($context['entity_type']);
  $nid = $entity->{$info['entity keys']['id']};
  $selected_nodes[] = node_load($nid);

  // on the last one, make the call to create the jobs
  if ($selected_counter == $selected_total){
    // NOTE: HARDCODED for testing!
    $target_languages = array("fr", "zh-hans");
    $jobs = technet_translation_add_tmgmt_jobs($selected_nodes, $target_languages);
    // dpm("Jobs created: " . print_r($jobs, TRUE));
  }
}


/**
 * Given an array of nodes and an array of target languages:
 * create a tmgmt job for each target language,
 * then add to that job a tmgmt item for each node,
 * return an array of tmgmt jobs.
 *
 * Adapted from:
 *   module: tmgmt/sources/node/ui/tmgmt_node_ui.model
 *   function: tmgmt_node_ui_checkout_multiple_action($nodes, $info)
 *
 * Assumption: source language is always 'en'
 *
 * @param array $nodes
 *   Array of Drupal nodes.
 * @param array $target_languages
 *   Array of strings of language codes (example: 'fr', 'es', 'zh-hans').
 *
 */
function technet_translation_add_tmgmt_jobs($nodes, $target_languages) {
  $jobs = array();
  foreach ($target_languages as $target_language){
    try{
      // Create new job.
      $job = tmgmt_job_create('en', $target_language, $GLOBALS['user']->uid);
      // build an array to return a list of created jobs.
      $jobs[] = $job;
      foreach ($nodes as $node) {
        if ($node->language == 'en') {
          try{
            // Add initial job item.
            $job->addItem('node', 'node', $node->nid);
          }
          catch(TMGMTException $e){
            watchdog_exception('tmgmt', $e);
            drupal_set_message(t('Unable to add job item for node %name.', array('%name' => $node->title)), 'error');
          }
        }
      }
    }
    catch(TMGMTException $e){
      watchdog_exception('tmgmt', $e);
      drupal_set_message(t('Unable to add job item for node %name.', array('%name' => $node->title)), 'error');
    }
  }
  return $jobs;

  /*
  This will create a separate job for each node, regardless of the language.
  It may work, but it's not the way tmgmt was designed
  foreach ($nodes as $node) {
    if ($node->language == 'en') {
      foreach ($target_languages as $target_language){
        try{
          // Create new job.
          $job = tmgmt_job_create($node->language, $target_language, $GLOBALS['user']->uid);
          // Add initial job item.
          $job->addItem('node', 'node', $node->nid);
          // for returning list of created jobs.
          $jobs[$job->tjid] = $job;
        }
        catch(TMGMTException $e){
          watchdog_exception('tmgmt', $e);
          drupal_set_message(t('Unable to add job item for node %name.', array('%name' => $node->title)), 'error');
        }
      }
    }
  }
  */
}
